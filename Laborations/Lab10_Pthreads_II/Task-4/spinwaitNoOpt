	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 11, 0	sdk_version 11, 1
	.globl	_barrier                ## -- Begin function barrier
	.p2align	4, 0x90
_barrier:                               ## @barrier
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	_lock@GOTPCREL(%rip), %rdi
	callq	_pthread_mutex_lock
	movl	_state(%rip), %ecx
	movl	%ecx, -4(%rbp)
	movl	_waiting(%rip), %ecx
	addl	$1, %ecx
	movl	%ecx, _waiting(%rip)
	cmpl	$8, _waiting(%rip)
	jne	LBB0_2
## %bb.1:
	movl	$0, _waiting(%rip)
	movl	$1, %eax
	subl	-4(%rbp), %eax
	movl	%eax, _state(%rip)
LBB0_2:
	movq	_lock@GOTPCREL(%rip), %rdi
	callq	_pthread_mutex_unlock
LBB0_3:                                 ## =>This Inner Loop Header: Depth=1
	movl	-4(%rbp), %eax
	cmpl	_state(%rip), %eax
	jne	LBB0_5
## %bb.4:                               ##   in Loop: Header=BB0_3 Depth=1
	jmp	LBB0_3
LBB0_5:
	addq	$16, %rsp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	_HelloWorld             ## -- Begin function HelloWorld
	.p2align	4, 0x90
_HelloWorld:                            ## @HelloWorld
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rsi
	leaq	L_.str(%rip), %rdi
	movb	$0, %al
	callq	_printf
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	callq	_barrier
	movq	-16(%rbp), %rsi
	leaq	L_.str.1(%rip), %rdi
	movb	$0, %al
	callq	_printf
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movq	%rdx, %rax
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.globl	_main                   ## -- Begin function main
	.p2align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	_lock@GOTPCREL(%rip), %rax
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	movq	___stack_chk_guard@GOTPCREL(%rip), %r8
	movq	(%r8), %r8
	movq	%r8, -8(%rbp)
	movl	$0, -84(%rbp)
	movl	%edi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	_pthread_mutex_init
	movq	$0, -104(%rbp)
LBB2_1:                                 ## =>This Inner Loop Header: Depth=1
	cmpq	$8, -104(%rbp)
	jge	LBB2_4
## %bb.2:                               ##   in Loop: Header=BB2_1 Depth=1
	xorl	%eax, %eax
	movl	%eax, %esi
	movq	-104(%rbp), %rcx
	shlq	$3, %rcx
	leaq	-80(%rbp), %rdx
	addq	%rcx, %rdx
	movq	-104(%rbp), %rcx
	movq	%rdx, %rdi
	leaq	_HelloWorld(%rip), %rdx
	callq	_pthread_create
## %bb.3:                               ##   in Loop: Header=BB2_1 Depth=1
	movq	-104(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -104(%rbp)
	jmp	LBB2_1
LBB2_4:
	movq	$0, -104(%rbp)
LBB2_5:                                 ## =>This Inner Loop Header: Depth=1
	cmpq	$8, -104(%rbp)
	jge	LBB2_8
## %bb.6:                               ##   in Loop: Header=BB2_5 Depth=1
	xorl	%eax, %eax
	movl	%eax, %esi
	movq	-104(%rbp), %rcx
	movq	-80(%rbp,%rcx,8), %rdi
	callq	_pthread_join
## %bb.7:                               ##   in Loop: Header=BB2_5 Depth=1
	movq	-104(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -104(%rbp)
	jmp	LBB2_5
LBB2_8:
	movq	_lock@GOTPCREL(%rip), %rdi
	callq	_pthread_mutex_destroy
	movq	___stack_chk_guard@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	jne	LBB2_10
## %bb.9:
	xorl	%eax, %eax
	addq	$112, %rsp
	popq	%rbp
	retq
LBB2_10:
	callq	___stack_chk_fail
	ud2
	.cfi_endproc
                                        ## -- End function
	.globl	_waiting                ## @waiting
.zerofill __DATA,__common,_waiting,4,2
	.globl	_state                  ## @state
.zerofill __DATA,__common,_state,4,2
	.comm	_lock,64,3              ## @lock
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Hello World! %ld\n"

L_.str.1:                               ## @.str.1
	.asciz	"Bye Bye World! %ld\n"

.subsections_via_symbols
